# Generated by Django 5.2.1 on 2025-09-10 12:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='JPY', max_length=3)),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Biweekly'), ('monthly', 'Monthly'), ('bimonthly', 'Bimonthly'), ('quarterly', 'Quarterly'), ('semiannually', 'Semiannually'), ('annually', 'Annually')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('univapay_token_id', models.UUIDField(db_index=True, unique=True)),
                ('token_type', models.CharField(choices=[('one_time', 'One Time'), ('subscription', 'Subscription'), ('recurring', 'Recurring')], max_length=20)),
                ('payment_type', models.CharField(choices=[('card', 'Credit Card'), ('paidy', 'Paidy'), ('online', 'Online Payment'), ('konbini', 'Convenience Store'), ('bank_transfer', 'Bank Transfer')], default='card', max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('card_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('card_brand', models.CharField(blank=True, max_length=50, null=True)),
                ('card_exp_month', models.IntegerField(blank=True, null=True)),
                ('card_exp_year', models.IntegerField(blank=True, null=True)),
                ('card_bin', models.CharField(blank=True, max_length=8, null=True)),
                ('card_type', models.CharField(blank=True, max_length=20, null=True)),
                ('card_category', models.CharField(blank=True, max_length=20, null=True)),
                ('card_issuer', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_data', models.JSONField(blank=True, default=dict)),
                ('cvv_authorize_enabled', models.BooleanField(default=False)),
                ('cvv_authorize_status', models.CharField(blank=True, max_length=20, null=True)),
                ('three_ds_enabled', models.BooleanField(default=False)),
                ('three_ds_status', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_limit', models.CharField(blank=True, max_length=20, null=True)),
                ('mode', models.CharField(default='test', max_length=10)),
                ('raw_token_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('one_time', 'One Time Payment'), ('recurring', 'Recurring Payment')], max_length=10)),
                ('univapay_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('store_id', models.UUIDField(blank=True, null=True)),
                ('univapay_transaction_token_id', models.UUIDField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(max_length=3)),
                ('amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('only_direct_currency', models.BooleanField(default=False)),
                ('metadata', models.JSONField(default=dict)),
                ('mode', models.CharField(max_length=10)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('raw_json', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(max_length=20)),
                ('transaction_token_type', models.CharField(blank=True, max_length=20, null=True)),
                ('subscription_id', models.UUIDField(blank=True, null=True)),
                ('merchant_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('requested_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('requested_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('requested_amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('charged_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('charged_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('charged_amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fee_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('fee_amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('capture_at', models.DateTimeField(blank=True, null=True)),
                ('descriptor', models.CharField(blank=True, max_length=255, null=True)),
                ('descriptor_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_detail', models.TextField(blank=True, null=True)),
                ('redirect_endpoint', models.URLField(blank=True, null=True)),
                ('redirect_id', models.UUIDField(blank=True, null=True)),
                ('three_ds_redirect_endpoint', models.URLField(blank=True, null=True)),
                ('three_ds_redirect_id', models.UUIDField(blank=True, null=True)),
                ('three_ds_mode', models.CharField(blank=True, choices=[('normal', 'Normal'), ('require', 'Require'), ('force', 'Force'), ('skip', 'Skip')], max_length=10, null=True)),
                ('bank_ledger_type', models.CharField(blank=True, max_length=20, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('virtual_bank_account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('virtual_bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('virtual_account_id', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_date', models.DateField(blank=True, null=True)),
                ('transaction_timestamp', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=50, null=True)),
                ('period', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Biweekly'), ('monthly', 'Monthly'), ('bimonthly', 'Bimonthly'), ('quarterly', 'Quarterly'), ('semiannually', 'Semiannually'), ('annually', 'Annually')], max_length=20, null=True)),
                ('initial_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('initial_amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('subsequent_cycles_start', models.DateField(blank=True, null=True)),
                ('schedule_settings', models.JSONField(blank=True, default=dict, null=True)),
                ('first_charge_capture_after', models.DurationField(blank=True, null=True)),
                ('first_charge_authorization_only', models.BooleanField(default=False)),
                ('cyclical_period', models.CharField(blank=True, max_length=20, null=True)),
                ('next_payment_id', models.UUIDField(blank=True, null=True)),
                ('next_payment_due_date', models.DateField(blank=True, null=True)),
                ('next_payment_zone_id', models.CharField(blank=True, max_length=50, null=True)),
                ('next_payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('next_payment_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('next_payment_amount_formatted', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('next_payment_is_paid', models.BooleanField(default=False)),
                ('next_payment_is_last_payment', models.BooleanField(default=False)),
                ('next_payment_created_on', models.DateTimeField(blank=True, null=True)),
                ('next_payment_updated_on', models.DateTimeField(blank=True, null=True)),
                ('next_payment_retry_date', models.DateField(blank=True, null=True)),
                ('cancelled_on', models.DateTimeField(blank=True, null=True)),
                ('termination_mode', models.CharField(blank=True, choices=[('immediate', 'Immediate'), ('on_next_payment', 'On Next Payment')], max_length=20, null=True)),
                ('retry_interval', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_history', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payment_service.subscriptionplan')),
                ('transaction_token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='payment_service.transactiontoken')),
            ],
            options={
                'verbose_name_plural': 'Payment Histories',
            },
        ),
        migrations.AddIndex(
            model_name='transactiontoken',
            index=models.Index(fields=['univapay_token_id'], name='payment_ser_univapa_4ff2b1_idx'),
        ),
        migrations.AddIndex(
            model_name='transactiontoken',
            index=models.Index(fields=['user', 'is_active'], name='payment_ser_user_id_a50547_idx'),
        ),
        migrations.AddIndex(
            model_name='transactiontoken',
            index=models.Index(fields=['user', 'token_type'], name='payment_ser_user_id_e07152_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['univapay_id'], name='payment_ser_univapa_155d2e_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['user', 'created_at'], name='payment_ser_user_id_0ec75a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['payment_type', 'status'], name='payment_ser_payment_a669a2_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['transaction_token', 'created_at'], name='payment_ser_transac_6ee21d_idx'),
        ),
    ]
